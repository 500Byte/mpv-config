##‚áò‚áòBasic Instructions:
## Lines starting with the comment symbol "#" are disabled (meaning the default MPV settings are restored); remove it to enable.
## For some enabled parameters without "=", the actual value is "yes". For example, --deband defaults to off: --deband is actually equivalent to --deband=yes; similarly, --deband=no is equivalent to commenting out that parameter.
## Comment content explanation ‚Äî‚Äî # <optional values> [condition requirements] parameter meaning explanation (supplement)

########
# Basic #
########

## Decoding
vo=gpu-next                           # <gpu/gpu-next/libmpv> Video output driver. Many subsequent options can only work under these three items. The current version's default is gpu.
                                      ## gpu has the highest universality and completeness; gpu-next see discussion here https://github.com/hooke007/MPV_lazy/discussions/39; libmpv is for some frontends, generally not used.
                                      ## gpu-next has a better prospect, currently has implemented the parsing mapping of Dolby Vision RPU layer metadata, does not yet support EL layer metadata parsing.
                                      ## The specific differences between gpu-next and gpu see the official wiki related instructions: https://github.com/mpv-player/mpv/wiki/GPU-Next-vs-GPU
gpu-api=d3d11                         # <opengl/vulkan/d3d11> [Recommended to set to d3d11 when using SVP frame interpolation] Select the graphics drawing interface. Windows' native rendering is d3d11 (default for mpv on Windows, ensure adaptive power mode is enabled for graphics card)
                                      ## opengl is the least recommended choice, vulkan has not fully implemented 10bit https://github.com/mpv-player/mpv/issues/8554
                                      ## Through d3d11-adapter you can set which graphics card mpv uses. See documentation: https://mpv.io/manual/master/#options-d3d11-adapter
                                      ### Which gpu-api to choose?
                                      ## Linux/macOS:¬†vulkan or opengl, vulkan recommended
                                      ## Windows: vulkan, d3d11, and opengl all optional. Native api d3d11 recommended for best performance and 10bit output implementation
#gpu-context=auto                     # <win/dxinterop/angle/d3d11/winvk/macvk> Select the output backend. This item is usually determined correctly by --gpu-api=<value>; with --gpu-api=opengl defaulting to angle, better changed to win/dxinterop
#fbo-format=auto                      # Internal processing precision. This item is usually determined correctly by --gpu-api=<value>, defaulting to first choosing 16 bits and above precision. With --vo=gpu-next this parameter cannot be modified
#d3d11-exclusive-fs=yes               # Fullscreen exclusive under --gpu-api=d3d11
#d3d11-flip=no                        # [Usually occurs when --d3d11-exclusive-fs=yes and --on-top are used together] Can be used to avoid MPV freezing screen issue in fullscreen
                                      # Enable this parameter if above issue exists, otherwise should not be used, because flip model performs best under d3d11. Tests show performance limits under N card drivers with flip mode, recommend disabling when encountering rendering bottlenecks
                                      # [When --gpu-context=angle also has fullscreen freezing issue] Replace d3d11-flip=no with --angle-flip=no
#d3d11va-zero-copy=yes                # [When gpu-api=d3d11] By default, when using hardware decoding with --gpu-api=d3d11, video images will be copied (GPU to GPU) from decoder surface to shader resources.
                                      # Setting this option avoids copying by sampling directly from the decoder image. This may improve performance and reduce power consumption but may result in incorrect image sampling at the bottom and right edges and may cause driver errors, as Direct3D 11 technically does not allow sampling from decoder surfaces (although most drivers support it).
                                      # Enable this option to attempt to improve when decoding stutters or drops frames.
hwdec=d3d12va-copy                    # Specifies the hardware video decoding API to use, change to no for software decoding. On Windows, hardware decoding recommended using d3d11va or d3d12va-copy. d3d11va has the best hardware decoding support, providing native hardware acceleration for 4k60 frames and 8k under av1 format. Although nvdec supports yuv444 decoding, the format is rare and easily handled by software decoding.
                                      # --hwdec=auto-safe is equivalent to --hwdec=yes. When --gpu-api=d3d11, value auto prefers d3d11va; when --gpu-api=vulkan, value auto prefers nvdec. auto-copy prefers d3d11va-copy.
                                      # Native hardware decoding without copy, theoretically the most efficient decoding mode, is not recommended to ensure all settings/filters/shaders work properly (some do not support). Note nvdec hardware decoding without copy does not support d3d11, only supports vulkan and opengl.
                                      ## You can also use a list of multiple values to try these decoding modes in order.
                                      ## When using auto without specifying a particular hardware decoding api, it is recommended to use the auto-safe parameter, which will look for hardware decoding apis actively supported by developers (d3d11va or nvdec on Windows).
                                      ## Hardware decoding mode may encounter some issues, software decoding is recommended (official manual does not recommend hardware decoding).
                                      ## Tests have found that the copy hardware decoding mode under --vo=gpu produces abnormal frame drops with 4K and above videos at frame rates >=60fps, recommend using software decoding mode or non-copy hardware decoding mode.
#hwdec-codecs=all                     # Try hardware decoding for codecs within the specified range, current version's default value is --hwdec-codecs="h264,vc1,hevc,vp8,vp9,av1,prores"
#vd-lavc-dr=no                        # [When gpu-api=d3d11] Enable direct rendering (default: yes). If set to yes, video is decoded directly into GPU video memory (or staging buffer)
                                      # If set to no, video is decoded into system memory, then copied to GPU memory. This may result in performance degradation but may solve some issues on certain low-end Intel GPUs
#vd-queue-enable=yes                  # Enable video decoder queue (default: no). If set to yes, the video decoder will run on a separate thread, which may result in performance degradation but may solve some issues on certain low-end Intel GPUs
#vd-lavc-threads=8                    # Number of threads for decoding. Whether threading is actually supported depends on the codec (default value: 0). 0 means auto-detect the number of cores on the machine and use it, up to 16. You can manually set more than 16 threads.
#vd-lavc-assume-old-x264=yes          # Assume video was encoded by an old, flawed version of x264 (default: no). Only try enabling this option to solve ffmpeg compatibility issues with old x264 encoded videos when there are decoding errors with x264 yuv444p10 format videos
#opengl-pbo=yes                       # Enable PBO. On some drivers, this may be faster, especially if the source video size is large (e.g., so-called ‚Äú4K‚Äù videos). On other drivers, it may be slower or cause latency issues.
##‚áò‚áòDual Graphics Card Laptops Handling
#vd=h264_qsv,hevc_qsv,mpeg2_qsv,vp9_qsv,vp8_qsv,av1_qsv
                                      # Under the configuration combination of Intel integrated graphics & NVDIA_MX_x50, if using discrete graphics for rendering, since the MX series discrete graphics does not have a decoding unit, even if hwdec specifies hardware decoding, it can still only software decode in practice.
                                      # Using this parameter allows for integrated graphics hardware decoding, auxiliary rendering while letting the discrete graphics take on the main rendering (when hwdec=no, fast forwarding may cause MPV to freeze, recommend using xxxx-copy decoding method).
#d3d11-adapter="NVIDIA GeForce RTX 2070 Super"
                                      # [When gpu-api=d3d11] Specify a particular graphics card as the main rendering output, by default it automatically selects the system-designated main rendering graphics card.
                                      # The graphics card name can be viewed in Task Manager, change accordingly. This parameter is equivalent to setting mpv to run with a discrete graphics card in the driver panel.
                                      # For example, when using the internal screen of a laptop with I+N dual graphics, the actual use is "Intel(R) UHD Graphics", modifying this item to specify discrete graphics can reduce the 3D rendering ratio of dual graphics cards in Task Manager.
                                      # Most dual graphics card laptops behave like ‚Äúdiscrete graphics direct connect‚Äù when using an external monitor, in which case this parameter is not needed for automatic discrete graphics output.
                                      # [When gpu-api=vulkan] Use parameter --vulkan-device instead of --d3d11-adapter.
#vulkan-device="NVIDIA GeForce RTX 2070 Super"
                                      # [When gpu-api=vulkan] This parameter replaces --d3d11-adapter to perform the function of specifying a graphics card.
                                      # Default is empty, example value "NVIDIA GeForce RTX 2070 Super" (must use the complete device name or UUID).

########
# Features #
########

title=${?pause==yes:‚è∏}${?mute==yes:üîá}${?ontop==yes:üìå}${?demuxer-via-network==yes:${media-title}}${?demuxer-via-network==no:${filename}}
                                      # Customize the title content displayed on the window, also affects the title attribute of some scripts. Default value: ${?media-title:${media-title}}${!media-title:No file}
osc=no                                # [A prerequisite for using third-party osc scripts] Disable the original OSC (i.e., the built-in "osc.lua" script) to be compatible with third-party interface styles
#fs                                   # fs=fullscreen starts in full screen
#no-border                            # Defaults to the native system window interface, enable this item for a borderless interface (removes Windows window decoration)
no-title-bar                          # Controls whether to use a window title bar for playback, enabled by default. Unlike --no-border, --no-title-bar can retain native Windows window features
#backdrop-type=auto                   # <auto|none|mica|acrylic|mica-alt> Controls background/border style (Windows only)
window-corners=roundsmall             # <default|donotround|round|roundsmall> Controls the window corner rounding preference. default: let the system decide whether to round; donotround: disable rounding; round: enable rounding; roundsmall: enable smaller radius rounding
#window-maximized=yes                 # Automatically maximize the MPV window upon running (maximization in a borderless interface resembles "borderless window mode" rather than "fullscreen")
#background="#778899"                 # <format as (AA)RRGGBB> Change the background color of MPV upon startup and when playing files without video tracks
#hidpi-window-scale=no                # Whether to perform HIDPI scaling, default yes. This parameter may affect the scaling behavior of osc-type scripts and scripts like console.lua, adjust according to actual effect
                                      # By default, the initialized video window changes size with DPI, for example, opening an 800p video on a 4k display with 200% scaling automatically performs 2x scaling to 1600p. It also affects other script parts
#auto-window-resize=yes               # <default yes|no> Whether to allow mpv to automatically adjust window size when switching playback files. This option does not affect the functionality of geometry and autofit
#geometry=75%x70%                     # <[W[xH]][+-x+-y][/WS]>, <x:y> Specific window size (this has the function of freezing window size) and/or position (calculated from the corner nearest to the screen edge) at startup
                                      # If different from video ratio, automatically fills black borders. Even if stretched, keeps the set ratio as much as possible. Using this option makes --autofit series and --window-scale parameters ineffective
#autofit=70%                          # <[W[xH]]> Initial window size and target size for scaling during file playback in window mode (percentage or pixel count), default: 60%
autofit-larger=90%x90%                # <[W[xH]]> The maximum percentage of the screen the window mode can occupy (e.g., opening 4k video on an FHD screen makes the initial window too large)
autofit-smaller=30%x30%               # <[W[xH]]> The minimum percentage of the screen the window mode can occupy (e.g., opening 480p video on a 4k screen makes the initial window too small)
#window-scale=1                       # Automatic window scaling ratio, default is 1. However, the window can only be truly scaled to 1 when hidpi-window-scale=no (otherwise it will consider the system DPI). Priority is lower than geometry and --autofit parameters
#keepaspect=no                        # Default yes, by default MPV stretches video only according to source ratio. Enable this item to always deform the picture to window size
#keepaspect-window=no                 # Default yes, by default MPV's window ratio is locked to video ratio. Enable this item for free window stretching behavior (when keepaspect=yes, black borders fill the sides)
#panscan=1.0                          # <0.0-1.0> Crop the picture to fill the window (recommended to use with keepaspect-window=no)
#pause                                # Start the player in pause state
#loop=inf                             # <N|inf|no> Always loop the current file
#loop-playlist=no                     # <N|inf|force|no> Playlist loop
#keep-open=yes                        # <yes|default no|always> Keep open after playlist playback ends, always: automatically pause at the end of the file, not playing the next file
#keep-open-pause=no                   # <default yes|no> Pause after playlist playback ends
                                      ## --keep-open=yes, --keep-open-pause=yes parameters are prerequisites for [end] condition configuration group to take effect
idle=yes                              # <yes|no|default once> Idle standby (keep mpv running even after playback stops or all files have been played)
#untimed                              # Do not sleep while outputting video frames. (When enabled, cannot correctly display frame interpolation values)
log-file="~~/files/mpv.log"           # Record log
ontop                                 # Keep window on top
snap-window=yes                       # Snap window to screen edges when moving (Windows only)
#window-affinity=default              # <default default|excludefromcmcapture|monitor> Controls mpv's window affinity behavior. excludefromcmcapture: MPV's window will be completely excluded from capture by external applications or screen recording software; monitor: blacks out outside MPV window
hr-seek=yes                           # <no|absolute|default|yes|always> Choose when to use precise seeking not limited to keyframes. Such seeking requires decoding video from a previous keyframe to the target position, so it may take some time depending on decoding performance
                                      # no: disable; absolute: precise seeking only for chapters; default: similar to absolute but enables precise seeking in pure audio cases. Behavior may change with version updates; yes: use precise seeking as much as possible; always: same as yes (for compatibility)
hr-seek-framedrop=no                  # Drop frames when seeking, disabling helps correct audio delay    # Recommended to set to no when using SVP frame interpolation
save-position-on-quit=yes             # Remember playback state upon exit. Cache directory defaults to "watch_later" folder in the settings folder
                                      # You can also press the Q shortcut key upon exit to save progress
write-filename-in-watch-later-config  # Write the filename in the playback record cache file
#ignore-path-in-watch-later-config    # When using "watch later" function, ignore path (i.e., use only filename). (Default value: no)
resume-playback-check-mtime=yes       # If the file's modification time is the same as when saved, resume playback position from the watch_later configuration subdirectory (usually ~/.config/mpv/watch_later/). This prevents erroneous behavior in differently contented files with the same name (default: no)
watch-later-dir="~~/cache/watch_later"
                                      # Store the "watch_later" folder in this directory, where files record options specified by --watch-later-options
watch-later-options=start,vid,aid,sid
                                      # [Recommended to leave empty when using SVP frame interpolation] Whitelist for watch later
                                      # When using --save-position-on-quit=yes or shortcuts to save to watch later upon exit, if not using a whitelist, multiple states such as filter lists, volume, rate, etc., will also be saved and restored upon next startup
                                      # Specific parameter values: start,speed,edition,volume,mute,audio-delay,gamma,brightness,contrast,saturation,hue,deinterlace,vf,af,panscan,aid,vid,sid,sub-delay,sub-speed,sub-pos,sub-visibility,secondary-sub-visibility,sub-scale,sub-use-margins,sub-ass-force-margins,sub-ass-vsfilter-aspect-compat,sub-ass-override,ab-loop-a,ab-loop-b,video-aspect-override
#watch-later-options-clr              # Disable restoring all settings changed during playback when resuming from playback records, can solve some known issues
#watch-later-options-remove=contrast  # To forbid certain parameters from being restored, use this option to set
                                      # Currently, this option must list parameters individually, unable to specify like --watch-later-options=option1,option2,..., recommend using watch-later-options whitelist for settings
reset-on-next-file=vf,af,loop-file,deinterlace,contrast,brightness,gamma,saturation,hue,video-zoom,video-rotate,video-pan-x,video-pan-y,panscan,speed,audio,sub,audio-delay,sub-pos,sub-scale,sub-delay,sub-speed,sub-visibility
                                      # Changes that need resetting when playing the next file (related to color, picture, audio tracks, subtitles, and filters)
input-ipc-server=\\.\pipe\mpvsocket   # input-ipc-server=<ipc_path> Enable IPC functionality, Linux/MacOS: input-ipc-server=/tmp/mpvsocket
                                      # This item needs to be set to mpvpipe value when using SVP manager
#demuxer-max-bytes=500MiB             # Target cache size for playing network videos (KiB or MiB)
#demuxer-readahead-secs=20            # Maximum cache time for network videos (seconds)
#directory-mode=ignore                # <default auto|recursive|lazy|ignore> When opening a directory, choose to recursively, lazily, or ignore all subdirectories
#ordered-chapters=no                  # Support for ordered chapter lists, enabled by default, can use no-ordered-chapters to disable
                                      # This is support for the mkv chapter-links feature, disabling it mpv will not load or search for video segments from other files, and will also ignore any chapter order specified in the main file
metadata-codepage=auto                # Specifies the encoding for various input metadata (default value: auto). This affects the interpretation of file tags, chapter titles, etc. For example, can set it to auto to enable encoding auto-detection (non UTF-8 encoding is an obscure edge case)
msg-level=all=info                    # <module1=level1,module2=level2,...> Controls the detail level of logs outputted to the console by each module, this also affects the log file. Available levels: <no|fatal|error|warn|info|status default|verbose|debug|trace>
                                      # Example only displays info and higher level messages. More information and use cases refer to the official manual: https://mpv.io/manual/master/#options-msg-level

#######
# OSD #
#######

##‚áò‚áòOSD stands for On-Screen-Display, typically referring to information that pops up on the screen. OSC stands for on-screen-controller, which in MPV refers to the simple control interface
##For more customization see https://mpv.io/manual/master/#osd

no-osd-bar
osd-on-seek=msg-bar                   # <no,bar,msg,msg-bar> The type of information displayed when seeking on the timeline
osd-bar-w=100
osd-bar-h=2
osd-bar-align-y=-1
#osd-fonts-dir=~~/fonts               # Specifies the OSD font directory, the example is the default value
osd-font="Noto Sans Mono CJK SC"      # Specifies the OSD font
osd-font-size=24                      # Changes the OSD font size (globally, affects text displayed by multiple features) (default value: 55)
osd-color="#FFFFFFFF"                 # OSD text primary color
osd-border-size=1.0                   # OSD text border size
osd-border-color="#FF000000"          # OSD text border color
osd-shadow-offset=0.5                 # OSD text subtitle shadow size
osd-shadow-color="#FF000000"          # OSD text subtitle shadow color
#osd-spacing=1                        # OSD text subtitle letter spacing
#osd-blur=0.5                         # Edge blur of OSD text subtitles <0..20.0>
#osd-bar-border-size=1.2              # Border size of the OSD bar
#osd-playing-msg="${?demuxer-via-network==yes:${media-title}}${?demuxer-via-network==no:${filename}} ${!playlist-count==1:Playlist:${playlist-pos-1}/${playlist-count}}"
                                      # The information briefly displayed at the start of each file playback. Preset to display filename
osd-status-msg=${playback-time/full} / ${duration/full} (${percent-pos}%)\nframe: ${estimated-frame-number} / ${estimated-frame-count}
                                      # Information displayed by OSD when seeking
osd-fractions=yes                     # Display OSD time in seconds (millisecond precision), helpful for viewing the exact timestamp of video frames
osd-duration=2000                     # Set the duration (global) of OSD text information (milliseconds) (default value: 1000)
#osd-playing-msg-duration=2000        # The duration of the --osd-playing-msg text, if this item is not set, then the global duration is used

#######
# Video #
#######

### Video-related settings are configured using configuration groups; the following are just parameter examples. For specific settings, see the [General Parameters Supplement Area] and the related configuration group parameters in the [Configuration Groups] section.

##‚áò‚áòThe following are ICC color management related parameter settings
#icc-profile="~~/icc/ITU-RBT709ReferenceDisplay.icc"
                                      # Load an ICC profile and use it to convert video RGB to screen output, select an icc profile corresponding to your monitor's color space. This option overrides --target-prim, --target-trc, and --icc-profile-auto options
                                      ## Since mpv's color calibration target is bt.1886 (close to gamma=2.4), enabling the --icc-profile-auto parameter to use the system-specified (srgb) calibration file will cause mpv display anomalies, as the (srgb) calibration file's gamma curve is usually gamma2.2
                                      ## For the above issue, it's best to manually specify a corresponding monitor color space calibration file with a gamma curve of gamma2.4, the example parameter can be referred to
#icc-profile-auto                     # Enable if professional calibration has been done (the system directory contains the corresponding icm calibration document). Uncalibrated wide gamut screens should manually specify target-prim=<value>
                                      # Enabling color management allows videos in standard color spaces to display relatively correct colors on wide gamut displays, turning it off will revert to an oversaturated state
                                      # Currently, mpv's use of icc color management causes issues like color bias and dimmed picture on most displays https://github.com/mpv-player/mpv/issues/8009
                                      ## Enabling the parameter --icc-force-contrast=1000 can solve the problem of excessively high contrast in some calibration files causing a dimmed picture (oled screens should test reasonable values themselves). Note this still cannot solve the issue of dimmed picture in hdr mapping
                                      # Or use the --target-prim=<value> parameter to manage the color space
#icc-intent=0                         # ICC color conversion mapping intent, 0: perceptual, 1: relative colorimetric (default), 2: saturation, 3: absolute colorimetric. Perceptual mapping recommended https://github.com/mpv-player/mpv/issues/8009#issuecomment-923607273
#icc-force-contrast=1000              # <no|0-1000000|inf> Color management. Overrides the static contrast data in the ICC file, default no means do not override, oled can be set to inf i.e., infinite (if this data is missing in the ICC, it automatically falls back to 1000), this item only affects content display with bt.1886
                                      ## Normal LCD generally uses 1000 (based on the panel's native data); users with OLED display devices try using 1000000 or the special value inf. LCD setting to 1000 can solve the problem of excessively high contrast in some calibration files causing black parts to be too black
#icc-3dlut-size=64x64x64              # <default auto|RxGxB> Size of the 3D LUT generated from each dimension of the ICC profile. Range <2--512>
#icc-cache=no                         # Whether to store a local cache of the 3dlut from the ICC profile, enabled by default
#icc-cache-dir="~~/cache/icc_cache"   # Specify a directory to store and load 3D LUTs created from ICC profiles. This can be used to speed up loading. Note, these files contain uncompressed LUTs. Their size depends on --icc-3dlut-size, and they can be very large. Note: This will not automatically clear, so old, unused cache files may remain indefinitely
                                      ## Caching the generated 3dlut should speed up the process, but insufficient hard disk IO performance may produce the opposite effect, choose whether to disable it based on actual conditions
#use-embedded-icc-profile=no          # Load embedded ICC profiles contained in media files (such as PNG images). (Default: yes). Note, this option under --vo=gpu is only effective when using display ICC profiles (--icc-profile or --icc-profile-auto) simultaneously

##‚áò‚áòThe following are target color management related parameter settings
#target-prim=auto                     # Wide gamut screens should set this parameter to a specific value to solve the problem of color oversaturation when ICC color management is not used, the video color will adapt to this color space. srgb screens do not need to change this default value (bt.709), other examples: for screens with 99% of argb write adobe, for screens with 90%+ of p3 gamut write dci-p3
                                      # Using the --target-prim=<value> parameter to manage color space may cause color bias issues under hdr, enabling the --gamut-mapping-mode=clip parameter can solve this issue https://github.com/mpv-player/mpv/issues/9071
#target-gamut=dci-p3                  # Explicitly limit the display's gamut. You can use this option to limit the output gamut, for example, DCIP3-in-BT.2020; set `--target-prim` to the color space spec, and `--target-gamut` to the output gamut you want to limit to. Depends on `--target-prim`. (Only applicable for `--vo=gpu-next`)
#target-trc=gamma2.2                  # Specifies the transfer characteristic (gamma) of the display, effective when not using icc color management. Default value auto: under --vo=gpu, uses gamma2.2 under hdr, does not process under sdr; under --vo=gpu-next, always uses bt.1886 curve (assuming infinite contrast, i.e., oled)
                                      # Recommended for non-oled and non-hdr displays to always use the gamma2.2 curve, to avoid overly dim mpv picture. Use auto or pq value for hdr passthrough
#target-contrast=auto                 # <auto|10-1000000|inf> Specifies the measured contrast of the output display. This item combined with --target-peak is used to calculate the display's black point, used for black point compensation during HDR tone mapping
                                      # The default value is auto, assuming 1000:1 contrast (considered as a typical SDR display), when passthrough HDR, will have infinite contrast. inf contrast specifies the display's ability to have perfect black levels, i.e., OLED displays
#target-peak=auto                     # <auto|nits> Specifies the measured peak brightness of the output display. Affected by the --target-trc parameter, default value auto: uses appropriate values based on the trc parameter, sdr defaults to 203, under hdr it's recommended to specify specific nits value based on actual display effect
                                      # When using icc color management, if nits are set higher than the default value (203), the display will be treated by mpv as an hdr screen
                                      # Under --vo=gpu-next, try not to modify this parameter to avoid abnormal picture performance
##‚áò‚áòThe following are 3dlut related parameters
#lut=<file>                           # [Effective when --vo=gpu-next] Specifies a custom LUT (Adobe .cube format) as part of the color conversion applied to colors. The exact way depends on --lut-type
#lut-type=conversion                  # [Effective when --lut=<file> is enabled] <default auto|native|normalized|conversion> Controls how color values are inputted and outputted for the LUT specified as --lut
                                      # auto: Automatically select the LUT from marked metadata, otherwise fallback to system (default); native: Applied to the original image content in its native RGB color space (non-linear light) before conversion to output color space
                                      # normalized: Applied to normalized RGB image content under linear light before conversion to output color space
                                      # conversion: Completely replaces the conversion from image color space to output color space. If such a LUT exists, it has the highest priority and overrides any ICC profiles as well as options related to tone mapping and output chromaticity (--target-prim, --target-trc, etc.)
#target-lut=<file>                    # [Effective when --vo=gpu-next] Specifies a custom LUT file (Adobe .cube format) to be applied to colors before display on the screen
                                      # This LUT provides values in normalized RGB form after encoding to the target color space, thus will be processed after the --target-trc parameter
#image-lut=<file>                     # [Effective when --vo=gpu-next] Specifies a custom LUT file (Adobe .cube format) to be applied to colors during image decoding. The exact way of the LUT depends on --image-lut-type
#image-lut-type=conversion            # [Effective when --image-lut=<file> is enabled] <default auto|native|normalized|conversion> Controls how color values are inputted and outputted for the LUT specified as --image-lut
                                      # auto: Automatically select the LUT from marked metadata, otherwise fallback to system (default); native: Applied to the original color space of the image content before decoding to RGB. For example, for HDR10 images, this would input PQ encoded YCbCr values with a range of 0.0-1.0
                                      # normalized: Applied to normalized RGB image content, after decoding from its native color encoding but before linearization
                                      # conversion: Completely replaces color decoding. This type of LUT should ingest the native color space of the image and output normalized non-linear RGB
##‚áò‚áòThe following are hdr related parameters
#inverse-tone-mapping=yes             # [Effective when --vo=gpu-next] If set, allows for inverse tone mapping (expanding SDR to HDR), only effective on hdr devices. Not supported with some tone mapping curves. Use with caution #! Note this parameter cannot be changed or take effect at runtime
#target-colorspace-hint=yes           # [Effective when --vo=gpu-next] If possible, automatically configure the display's output color space through the input values of the media stream (e.g., HDR passthrough). Requires driver support #! Note this parameter cannot be changed or take effect at runtime
                                      # Available under --vo=gpu-next --gpu-api=vulkan and in fullscreen (Windows limitation), under --gpu-api=d3d11 manual switch to display HDR mode is required (Windows limitation)
#tone-mapping=hable                   # Tone mapping algorithm, other recommendable ones include clip|mobius|reinhard|hable|bt.2390|gamma|spline|bt.2446a|st2094-10|st2094-40, default auto, chooses the best curve based on internal heuristics (actually spline under --vo=gpu-next)
                                      # spline, bt.2446a, st2094-10, and st2094-40 algorithms are only available under --vo=gpu-next
                                      ## Under vo=gpu, hable or bt.2390 are recommended for testing. Hable retains better details, while bt.2390 has better contrast
                                      ## Under vo=gpu-next, currently recommended to test spline, hable, and bt.2446a. Spline mapping algorithm combined with --hdr-compute-peak offers the best tone mapping performance inside mpv
#tone-mapping-param=0.3               # Minor parameter for the tone mapping algorithm. hable and bt.2446a have no parameters; bt.2390 has no parameters under --vo=gpu, default value 1.0 under -vo=gpu-next; st2094-10 default 0.7, mobius and spline default 0.5, reinhard default 0.5, gamma default 1.8 (default value under --vo=gpu-next is 0.3)
                                      # Under -vo=gpu-next when using bt.2390, recommended values: 2.0 or the value 0.5 in ITU-R specifications
#tone-mapping-max-boost=1.0           # <1.0-10.0> Maximum exposure multiplier for average brightness, default: 1.0. Increasing this value can reveal hidden details in dark areas, too high will make dark areas unnaturally bright. Can try performances under 1.0,1.33, only available under --vo=gpu
#gamut-mapping-mode=clip              # <default auto|clip|perceptual|relative|saturation|absolute|linear|warn|desaturate|darken> Specifies how to handle the desired target display gamut after any tone mapping is completed, default auto: automatically selects the best mode (actually applies perceptual)
                                      # clip: Hard clips each RGB channel to the target gamut, recommended for priority use; perceptual: Uses soft knee to perform perceptual balanced gamut mapping, with a roll-off clipping area and hue shift functionality, maintaining saturation
                                      # relative: Performs relative chromatic clipping while maintaining the exponential relationship between brightness and chroma; saturation: Performs a simple RGB->RGB saturation mapping. Never clips, but distorts all hues and/or results in a faded appearance
                                      # absolute: Performs absolute chromatic clipping. Like 'relative' but truly does not adapt to the white point; linear: Linearly/uniformly reduces image saturation to bring the whole image into the target gamut
                                      # warn: Simply highlights out-of-gamut pixels; desaturate: Performs constant luminance chromatic clipping, lowering color saturation towards white until they are within range; darken: Uniformly darkens the input slightly to prevent clipping and highlighting on blowouts, then chromatically clamps to the input gamut boundary, slightly biased to maintain luminance
#hdr-contrast-recovery=0.30           # <0.0-2.0> Enables HDR contrast recovery algorithm, designed to enhance the contrast of HDR videos after tone mapping. Applicable only to --vo=gpu-next
                                      # Intensity (default value: 0.0) indicates the degree of contrast recovery, 0.0 means completely disabled, 1.0 means 100% intensity. Values greater than 1.0 are allowed but may lead to over-sharpening
                                      ## In mpv's built-in configuration group gpu-hq, this parameter's default value is 0.30
#hdr-contrast-smoothness=3.5          # <1.0-100.0> Enables HDR contrast smoothness algorithm, designed to enhance the smoothness of HDR videos after tone mapping. Applicable only to --vo=gpu-next
                                      # Smoothness (default value: 3.5) indicates the degree to which the HDR source is low-passed to obtain contrast information, a value of 2.0 corresponds to a 2x reduction. Users with low DPI displays (<= 100) may wish to lower this value, while users with very high DPI displays (‚Äúretina‚Äù) may want to increase it
#hdr-compute-peak=yes                 # <default auto|yes|no> This option basically provides dynamic, scene-based tone mapping (older graphics cards do not support this parameter, in which case the picture will turn pale), might cause brightness to flicker with scene changes
                                      # Currently, under some tone mapping curves (bt.2390,reinhard) with --hdr-compute-peak enabled, there's a tendency for loss of highlight details or overexposure; also, under some tone mapping curves, there's a significant improvement (spline,bt.2446a,hable)
#hdr-peak-decay-rate=20               # [Effective when --hdr-compute-peak=yes], the decay rate for the HDR peak detection algorithm (<0.0-1000.0> default value: 20.0)
#hdr-scene-threshold-low=1.0          # [Effective when --hdr-compute-peak=yes], the lower threshold (dB) of brightness difference considered as a scene change (<0.0-100.0> default value: 1.0)
#hdr-scene-threshold-high=3.0         # [Effective when --hdr-compute-peak=yes], the upper threshold (dB) of brightness difference considered as a scene change (<0.0-100.0> default value: 3.0)
#hdr-peak-percentile=100              # Effective when [--hdr-compute-peak=yes] and [-vo=gpu-next]. (<0.0-100.0> default value: 100.0) Specifies which percentile of the input image brightness histogram to consider as the true peak
                                      # If set to 100 (default), measures the brightest pixel. Otherwise, the top of the frequency distribution is gradually cut off. Setting it too low will result in clipping very bright details but can improve dynamic brightness for scenes with very bright isolated highlights. Values other than 100 come with a minor performance loss
                                      ## If you find the screen brightness always jumping, you can lower this parameter to ignore some of the peak values, not recommended to go below 99.7
                                      ## In mpv's built-in configuration group gpu-hq, this parameter's default value is 99.995
#allow-delayed-peak-detect=no         # Effective when [--hdr-compute-peak=yes] and [-vo=gpu-next], default no. When using --hdr-compute-peak, allows detected peaks to be delayed by one frame when beneficial for performance
                                      # Especially when advanced rendering is not needed, this can avoid unnecessary FBO processing. Note -vo=gpu defaults to delayed peak processing

##‚áò‚áòThe following are related parameter settings for adjusting picture effects
#video-sync=display-resample          # Acts like "ReClock", changes to sync video frames with the display refresh rate, automatically adjusts audio speed to compensate for offset. # Recommended to turn off when using SVP frame interpolation
                                      # Default value audio (syncs with audio/system clock) usually has the best compatibility but may occasionally drop frames and repeat
#video-sync-max-video-change=5        # [Only effective when --video-sync=display-xxxx] Default value: 1
#interpolation                        # [Only effective when --video-sync=display-xxxx] Reduces judder caused by mismatch between video fps and display refresh rate (also known as picture jitter). # Recommended to turn off when using SVP frame interpolation
                                      # The algorithm used for interpolation. See https://mpv.io/manual/master/#options-tscale
                                      # Some discussions at https://github.com/mpv-player/mpv/issues/2685
#interpolation-preserve=no            # [Effective when --vo=gpu-next], default yes. Preserves the result of the previous frame's interpolation, even if the renderer parameters change. Excludes options related to cropping and video placement, which always invalidate the cache
                                      # Enabling this option makes dynamic updates of renderer settings smoother, but at the cost of slightly higher latency when responding to such changes
#tscale=oversample                    # [Only effective when --interpolation is enabled] Selects the temporal interpolation algorithm (not MEMC motion compensation). # Recommended to turn off when using SVP frame interpolation
                                      # The default interpolation algorithm is oversample. Overall, mitchell is smoother (of course not comparable to SVP interpolation), but it blurs. Oversample has no blur but is not smooth (essentially restoring the 24 fps look, similar effect to MADVR's smoothmotion), triangle is between the two, and catmull_rom is relatively sharp
                                      # Choose based on your own needs
#tscale-radius=1.0                    # Sets the radius for adjustable filters, must be a floating number between 0.5 and 16.0. If not specified, defaults to the filter's preferred radius. Not applicable to every scaler and VO combination
#tscale-clamp=0.0                     # <0.0-1.0> Specifies a bias to multiply with negative coefficients. Specifying --scale-clamp=1 has the effect of completely removing negative weights, effectively limiting the value range to [0-1]. A value between 0.0 and 1.0 can be specified to apply only moderately reduced negative weights
                                      # The default value for tscale is 1.0, effectively reducing tscale's ringing artifacts. Other scale algorithms default to 0.0
#tscale-antiring=1.0                  # Sets the anti-ringing strength. This tries to eliminate ringing but introduces other artifacts in the process. Must be a floating number between 0.0 and 1.0. The default value 0.0 completely disables anti-ringing
                                      # Note, this does not affect the special filters bilinear and bicubic_fast
#dither-depth=auto                    # <N|no|default auto> Whether to enable color depth dithering to compensate for color conversion losses. Write 8 for 8-bit displays, 10 for 10-bit displays, auto depends on --gpu-api, not necessarily correct, must manually specify 10bit under vulkan. See issue status: https://github.com/mpv-player/mpv/issues/8554
                                      # If there is an output anomaly for displays using 10 on 8 dither 10, change back to 8
#dither=fruit                         # <default fruit|ordered|error-diffusion|no> [Effective when --dither-depth is enabled], selects the color depth dithering algorithm
                                      # The error-diffusion algorithm has the best effect but is also the most power-consuming, it will automatically fall back to the fruit algorithm when power is insufficient
#dither-size-fruit=6                  # [Effective when --dither=fruit], <2-8> Sets the size of the color depth dithering matrix (default value: 6). The actual size of the matrix is (2^N)x(2^N), with option value being N, thus 6 actually is 64x64
#error-diffusion=sierra-lite          # <simple|default sierra-lite|floyd-steinberg|atkinson> [Effective when --dither=error-diffusion], the kernel used by the error-diffusion algorithm
#temporal-dither                      # [Effective when --dither-depth is enabled], enables temporal color depth dithering algorithm (i.e., frame blending color depth dithering algorithm)
                                      # This varies the direction of the tiled dithering matrix across 8 different dithering modes on each frame. This may cause flickering on LCD displays
#temporal-dither-period=1             # <1-128> [Effective when --temporal-dither is enabled], determines the frequency at which the color depth dithering mode is updated when in use. 1 (default value) updates on every video frame

#scale=ewa_hanning                    # Scaling algorithm, default algorithm is lanczos, recommended algorithms are --ewa_lanczos, --ewa_lanczossharp, and --ewa_hanning, i.e., jinc algorithm and its variants
                                      # ewa_hanning compared to other jinc algorithms can reduce the production of ringing
                                      # Among built-in scale algorithms, spline36 is more suitable for live-shot images, ewa class algorithms are more suitable for anime images
#scale-radius=3.2383154841662362      # Sets the radius for adjustable filters, must be a floating number between 0.5 and 16.0. If not specified, defaults to the filter's preferred radius. Not applicable to every scaler and VO combination
#scale-antiring=1.0                   # Sets the anti-ringing strength. This tries to eliminate ringing but introduces other artifacts in the process. Must be a floating number between 0.0 and 1.0. The default value 0.0 completely disables anti-ringing
                                      # Note, this does not affect the special filters bilinear and bicubic_fast
                                      ## When using external upscale shaders, there's basically no need to enable this option
#cscale=bilinear                      # Chroma upscaling algorithm; if not specified, automatically adopts --scale (not recommended). Recommended to use the bilinear algorithm, the difference in chroma upscaling algorithms is not perceptible, generally no need to invest too much performance
                                      # In practical tests, found the bilinear algorithm more suitable for poorer sources, and the catmull_rom algorithm more suitable for better sources
                                      # "KrigBilateral.glsl" though having the best effect, may lead to excessive energy consumption under special source (VFR) and special shader combinations
#cscale-radius=3                      # Sets the radius for adjustable filters, must be a floating number between 0.5 and 16.0. If not specified, defaults to the filter's preferred radius. Not applicable to every scaler and VO combination
#cscale-antiring=1.0                  # Sets the anti-ringing strength. This tries to eliminate ringing but introduces other artifacts in the process. Must be a floating number between 0.0 and 1.0. The default value 0.0 completely disables anti-ringing
                                      # Note, this does not affect the special filters bilinear and bicubic_fast
                                      ## When using external cscale shaders, there's basically no need to enable this option
#dscale=catmull_rom                   # Downsizing algorithm. Default algorithm is hermite
                                      # When only using built-in dscale algorithms, recommended bicubic (variants recommend catmull_rom) or ewa_hanning, can also test robidouxsharp and ewa_robidouxsharp and other algorithms for effect
#dscale-radius=1                      # Sets the radius for adjustable filters, must be a floating number between 0.5 and 16.0. If not specified, defaults to the filter's preferred radius. Not applicable to every scaler and VO combination
#dscale-antiring=1.0                  # Sets the anti-ringing strength. This tries to eliminate ringing but introduces other artifacts in the process. Must be a floating number between 0.0 and 1.0. The default value 0.0 completely disables anti-ringing
                                      # Note, this does not affect the special filters bilinear and bicubic_fast
                                      ## When using external dscale shaders, there's basically no need to enable this option
#linear-upscaling=no                  # [Must specify 16 bits or more precision with --fbo-format; incompatible with --sigmoid-upscaling] (No impact on HDR content)
#sigmoid-upscaling=no                 # [Incompatible with --linear-upscaling] Non-linear color conversion during upscaling to avoid strong ringing artifacts. Default enabled
                                      ## Developer suggests either prioritizing --sigmoid-upscaling or not using either of the --linear- options at all (i.e., scaling in gamma light)
                                      ## When using external upscale shaders, there's basically no need to enable this option
#correct-downscaling=yes              # [Ineffective when --dscale=bilinear] Enhances the quality of downscaling algorithms (anti-aliasing), may produce minor distortions for videos with unusual aspect ratios. Default enabled
                                      ## Can be replaced by a better "SSimDownscaler.glsl" shader scheme
#linear-downscaling=no                # [Must be turned off when using "SSimDownscaler.glsl"; must specify 16 bits or more precision with --fbo-format] (No impact on HDR content). Default enabled
                                      ## The above two --linear- parameters correspond to MADVR's "scale in linear light", linear processing when downsizing can improve the accuracy of color contrast and suppress some algorithm-generated ringing artifacts
#scaler-resizes-only=no               # Default yes, uses bilinear algorithm for perfect restoration when no scaling is performed, when disabled, even without size change, the specified scale value is used for processing, can correct the half-pixel offset introduced by nnedi3 and ravu (but unnecessary)
#deband=no                            # Removes banding, not needed constantly, can choose to manually enable based on the source
#deband-iterations=1                  # <0-16> Number of times debanding is executed, higher intensity but also more resource-intensive, values >4 actually ineffective (default 1), 3-4 roughly equivalent to MADVR's deband set to high effect
#deband-threshold=48                  # <0-4096> Cutoff threshold for the filter, higher numbers increase intensity but gradually reduce image details (default 48)
#deband-range=16                      # <1-64> Initial radius, larger values stronger debanding and higher performance consumption; smaller values smoother (default value 16). If increasing --deband-iterations, need to decrease this value to compensate
#deband-grain=32                      # <0-4096> Adds extra dynamic noise, helps to mask remaining quantization artifacts (default 32)

####################
## Audio Settings ##
####################

audio-device=auto                     # Specify the audio output device at startup
                                      # Example specific value --audio-device="wasapi/{xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}", see the official manual for how to get the device name
audio-channels=7.1,5.1,stereo         # <default value auto-safe|auto|layouts|stereo>, if playing multi-channel movies on a stereo system and some channels are missing, try forcing it to stereo
                                      # Note: This item must be set to the related channel value or priority order of the actual audio output device. MPV's default auto-safe and auto can cause channel loss in multi-channel mixing, not recommended
                                      # Example parameter 7.1,5.1,stereo is a common priority order for audio output devices, automatically fallback to match the actual audio output device value (most use stereo two-channel devices)
                                      # For multi-channel mixing into stereo, if you find the background sound too loud, character dialogue too soft, try looking at this: https://github.com/mpv-player/mpv/issues/6563 
ao=wasapi                             # --ao=<driver1,driver2,...[,]> Specify a priority list of audio output drivers to use, if the list has a trailing ',', mpv will fallback to drivers not included in the list
                                      ## Windows recommended wasapi; Linux recommended alsa, with parameter --audio-channels=auto; MacOS recommended coreaudio or coreaudio_exclusive
                                      ## Tests show that opening MPV after another software monopolizes the audio channel can cause extreme video stutter
#audio-exclusive=yes                  # Audio channel exclusive. If there are audio stuttering issues, disable this item or the one above
#volume=100                           # Player startup volume. 0 for mute, default 100
#volume-max=130                       # <100.0-1000.0> Maximum volume. Default value 130 (130's loudness is about double that of 100, 1.3^3‚âà2)
#audio-pitch-correction=no            # [--af=scaletempo/scaletempo2/rubberband prerequisite] Audio pitch correction when changing playback speed, default yes. Automatically inserts one of the first three audio filters (more information in the filter section)
#audio-delay=0.04                     # Set audio delay if needed
#audio-samplerate=96000               # Force resample to 96kHz, 24bit (requires hardware support of the audio device). Note! Not necessarily needed
#audio-format=s32
#audio-normalize-downmix=yes          # Enable/disable normalization when downmixing surround sound audio to stereo (default: no). If disabled, downmixing may cause clipping. If enabled, the output may be too quiet, depending on the source audio
gapless-audio=no                      # <no|yes|default weak> Try to play continuous audio files without silence or interruption when changing files. Default value weak: Initializes audio output when audio format changes
                                      # Setting to yes can cause file-saving at the same sample rate, resulting in decreased audio quality
#audio-file-auto-exts=aac,ac3,dts,eac3,flac,m4a,mka,mp3,ogg,opus,thd,wav,wv
                                      # Specifies the extensions of audio files to match when using the "audio-file-auto" option. Example is the default value
audio-file-auto=fuzzy                 # <default no|exact|fuzzy|all> Automatically load matching external audio tracks
audio-file-paths=audio;audios;**
                                      # <path1:path2:...> Look for matching audio tracks in specified additional directories, supports relative and absolute paths
                                      ## ":" use ";" instead on Windows
                                      ## Can enhance path configuration with fuzzydir.lua script, adding "**" can automatically load all matching subdirectory audio tracks in the same directory as the video
alang=japanese,jpn,jap,ja,jp,english,eng,en
                                      # Set preferred language for audio tracks, but MPV prioritizes external tracks
#aid=1                                # Temporarily unable to select tracks based on other metadata, and MPV defaults to prefer external tracks, often selecting unwanted audio tracks
                                      ## Recommended to use trackselect.lua script to automatically select specified audio tracks based on metadata https://github.com/po5/trackselect


##############
## Subtitles##
##############

#sub-font-provider=fontconfig                 # <default auto|none|fontconfig> Subtitle font rendering API option, Windows recommended auto, DirectWrite for best performance
                                              # auto automatically selects the system font rendering interface: DirectWrite for Windows, fontconfig for Linux, CoreText for macOS
                                              # none ignores specified fonts in subtitles, uses sub-font parameter, does not change subtitle style (ineffective for embedded subtitles)
                                              # fontconfig uses fonts from fonts.conf in the mpv.conf directory, allows custom font path <dir>CUSTOMFONTDIR</dir>
                                              # On Windows, using fontconfig initially writes all fonts in the directory into memory, then loads on demand. Slow to load and switch, not recommended
#sub-ass-override=no                          # <default yes|no|force|scale|strip> Set subtitle rendering method, controls if style overrides are applied
                                              # no: disabled; yes: applies all --sub-ass-* style override options; force: forcibly applies all --sub-* options; scale: similar to yes, but also applies --sub-scale; strip: removes all ASS tags and styles, also affects other formats like pgs and srt

#sub-scale-by-window=no                       # Scale subtitles based on window size (default: yes). Affects plain text and ASS subtitles
#sub-scale-with-window=no                     # Make subtitle font size relative to the window, not the video (default: yes). Affects only plain text subtitles
#sub-ass-scale-with-window=yes                # Similar to --sub-scale-with-window, but only affects ASS subtitles (default: no). In some cases, this might cause ass style misplacement
#embeddedfonts=no                             # Use fonts embedded in Matroska container files and ASS scripts (default: yes)
#sub-codepage=utf8:gbk                        # Specify subtitle encoding, default auto: automatically detects subtitle encoding, falls back to UTF-8 on failure. Example treats non-UTF-8 as GBK encoding
                                              # Note: This only applies to text subtitle files. Other types of subtitles (especially those in mkv files) are always assumed to be UTF-8
#sub-auto-exts=ass,idx,lrc,mks,pgs,rt,sbv,scc,smi,srt,ssa,sub,sup,utf,utf-8,utf8,vtt
                                              # Specifies the extensions of subtitle files to match when using the "sub-auto" option. Example is the default value
sub-auto=fuzzy                                # <default no|exact|fuzzy|all> Automatically load matching external subtitles
sub-file-paths=sub;subs;subtitles;Â≠óÂπï;**
                                              # <path1:path2:...> Look for matching subtitles in specified additional directories, supports relative and absolute paths, example searches folders named "sub", "subtitles", "Â≠óÂπï" under the current file path
                                              ## ":" use ";" instead on Windows
                                              ## Can enhance path configuration with fuzzydir.lua script, adding "**" can automatically load all matching subdirectory subtitles in the same directory as the video
slang=chs,sc,zh-CN,zh-Hans,cht,tc,zh-Hant,zh-HK,zh-TW,chi,zho,zh
                                              # Set preferred subtitle language, but MPV prioritizes external tracks
#sid=1                                        # Temporarily unable to select tracks based on other metadata, MPV defaults to prefer external tracks, often selecting unwanted subtitles
                                              ## Recommended to use sub-select.lua script to automatically select specified subtitles based on metadata https://github.com/CogentRedTester/mpv-sub-select
#subs-fallback=default                        # <yes|default default|no> Fallback to other subtitles when existing tracks don't meet --slang conditions, value default means only select tracks marked as "default"
#subs-fallback-forced=no                      # <default yes|always|no> Automatically select forced subtitle tracks matching the selected audio track's language if no tracks match your preferred language
#subs-with-matching-audio=yes                 # <default yes|forced|no> Automatically select a full/non-forced subtitle track even if the selected audio track matches your preferred subtitle language
#subs-match-os-language=yes                   # <default yes|no> Automatically select tracks matching the operating system language (if the audio stream uses another language). Note that if "--slang" is set, this will be completely ignored

#blend-subtitles=yes                          # <yes|video|default no> Blend subtitles onto video frames before interpolation and color management. Value video similar to yes but draws subtitles at the video's original resolution and scales with the video
                                              # Deprecated --blend-subtitles=video parameter under --vo=gpu-next
                                              # Enabling this restricts subtitles to the visible part of the video (can't appear on black bars below the video)
                                              # Also makes subtitles affected by --icc-profile, --target-prim, --target-trc, --interpolation, --gamma-factor, and --glsl-shaders
                                              # When using --interpolation, can improve subtitle performance with the right tscale algorithm
                                              ## HDR issues status https://github.com/mpv-player/mpv/issues/6368 (static mapping unaffected)
#sub-ass-force-margins=yes                    # [Ineffective when --blend-subtitles=yes/video] Default no, when set to yes, makes ASS subtitles render on black bars as much as possible. Not recommended to always set to yes as it can disrupt some ASS pos tagging effects, suggested to toggle manually via shortcut
#stretch-image-subs-to-screen=yes             # Force stretch image subtitles to scaled resolution instead of referencing video resolution, can make PGS achieve output on black bars effect. Note: This may disrupt display effects
                                              # Note: Only when enabling this option can correct subtitle display effects be obtained when video and PGS subtitle ratios are inconsistent (a common issue with domestically produced movies with embedded pgs subtitles)

## If subtitles appear different than with xy-subfilter, try enabling the following settings
sub-ass-vsfilter-aspect-compat=no             # Stretch ASS subtitles when playing non-standard ratio videos to mimic traditional vsfilter behavior, default yes
#sub-ass-vsfilter-color-compat=full           # <default basic|full|force-601|no> Mimic (xy-)vsfilter behavior for converting subtitle color space
#sub-ass-vsfilter-blur-compat=no              # Scale "\blur" tag based on video resolution rather than .ass specified resolution, default yes. Improves compatibility with vsfilter rendering behavior, affects "\blur", "\border", "\shadow", etc., ASS tag scaling behavior
                                              ## Known ASS issue: https://github.com/mpv-player/mpv/issues/9858, "\fry" tag scaling error, can toggle state via shortcut binding
                                              ## When video resolution is greater than 1080p, this option may cause "\blur", "\border", "\shadow", etc., ASS tag scaling behavior errors, solution as above
#sub-ass-style-overrides-append=Encoding=-1   # Force style: enable automatic detection. Can be used to fix character encoding and text direction recognition errors, and improve rendering of some ASS tags
#sub-ass-style-overrides-append=ScaledBorderAndShadow=no
                                              # Force style: do not scale borders and shadows. Can prevent the so-called "heavy ink" style https://github.com/libass/libass/issues/287
                                             

 # Note: libass version 0.15.2 and later git versions have fixed this issue

#sub-gauss=1.5                                # <0.0-3.0> Apply Gaussian blur to image subtitles (default: 0). Helps make pixelated DVD/Vobsub look better
#sub-gray=yes                                 # Convert image subtitles to grayscale. Can help make yellow DVD/Vobsubs look better
#sub-fix-timing=yes                           # Adjust subtitle timing to remove tiny gaps or overlaps between subtitles (if the difference is less than 210 ms). In some cases, this might make things worse, in which case, try disabling. Default disabled
#sub-stretch-durations=yes                    # Extend the duration of subtitles so they end when the next one starts. Might help with subtitles that erroneously have a zero duration, but could also break normal subtitles. Default disabled
#sub-fps                                      # Specify the frame rate for the subtitle file (default: video fps). Only affects text subtitles
#sub-speed=24/23.976                          # Multiply subtitle event timestamps by the given value. Can be used to fix playback speed for frame-based subtitle formats. Only affects text subtitles
                                              # --sub-speed=24/23.976 plays frame-based subtitles, assuming a frame rate of 23.976, 24 frames per second
#stretch-dvd-subs=yes                         # Stretch DVD subtitles when playing deformed videos, default disabled
#sub-filter-regex-plain=yes                   # Whether to first convert ASS "text" fields to plain text (default: no). This strips ASS tags and applies ASS directives (like \N) to line breaks. If the result is multiline, regex anchors ^ and $ match each line, but any matches still discard all lines
#sub-filter-regex-warn=yes                    # Log discarded lines with a warning log level, rather than verbose (default: no). Helpful for testing
#sub-filter-regex-enable=no                   # Whether to enable regex filtering (default: yes), the following two parameters are ineffective when empty
#sub-filter-regex-append=opensubtitles\.org   # --sub-filter-regex-...=... Set a list of regexes to match against text subtitles and delete any matching lines (default: empty) Case insensitive, but how this is executed depends on libc, and is likely only applicable to ASCII. Does not apply to bitmap/image subtitles
#sub-filter-jsre-append=                      # Same as --sub-filter-regex, but uses JavaScript regular expressions. Shared/affected by all --sub-filter-regex-* control options, just requires JavaScript support

## Subtitle settings with no built-in style
#sub-fonts-dir=~~/fonts                       # Specify the font lookup directory for text subtitles, example is the default value
sub-font="Noto Sans CJK SC"                   # Specify the font for plain text subtitles, this parameter should not affect ASS subtitles, but actually affects the default font for ASS https://github.com/mpv-player/mpv/issues/8637
sub-font-size=50                              # Text subtitle font size
sub-bold=yes                                  # Use bold style for text subtitles
#sub-italic=yes                               # Use italic style for text subtitles
sub-color="#FFFFFFFF"                         # Text subtitle font color. <Format (AA)RRGGBB> AA is hex transparency, RRGGBB is hex color representation
#sub-back-color="#FF262626"                   # Text subtitle background color
sub-border-size=0.5                           # Text subtitle border size
sub-border-color="#FF000000"                  # Text subtitle border color
sub-shadow-offset=0.5                         # Text subtitle shadow size
sub-shadow-color="#FF000000"                  # Text subtitle shadow color
#sub-spacing=1                                # Text subtitle letter spacing
#sub-blur=0.5                                 # Edge blur level of text subtitles, recommended value between 0.5-3.0 <0..20.0>
#sub-use-margins=no                           # Render plain text subtitles on black bars, default yes
#sub-pos=100                                  # Specifies the position of subtitles on the screen. This value is the vertical position of subtitles, as a percentage of screen height. Default 100, values above 100 will move down. Affects ASS and plain text subtitles
#sub-margin-x=25                              # Left and right screen margin for subs in scaled pixels, this option specifies the distance to the left of subs and the distance from the right border
#sub-margin-y=22                              # Top and bottom screen margin for subs in scaled pixels, this option specifies the vertical margin for plain text subtitles. If you just want to raise the vertical subtitle position, use --sub-pos
#sub-align-x=center                           # <left|default center|right> Controls which corner text subtitles should align with on the screen. Never applied to ASS subtitles unless in --no-sub-ass mode. Also, does not apply to PGS image subtitles
#sub-align-y=bottom                           # <top|center|default bottom> Controls the vertical position of text subtitles
#sub-justify=left                             # <default auto|left|center|right> Controls the alignment of multi-line subtitles (default: auto, aligned according to --sub-align-y definition). Left alignment recommended
#sub-ass-justify=yes                          # Apply --sub-justify on ASS subtitles if --sub-ass-override is not set to no. Default value: no

########
# Screenshots #
########

### The following preset parameters are for capturing the highest quality images
screenshot-format=webp                        # <default jpg|(same as before)jpeg|png|webp|jxl|avif>
#screenshot-png-compression=7                 # <0-9> PNG compression level, too high levels affect performance, default is 7
#screenshot-png-filter=5                      # Sets the filter to apply before PNG compression. 0 for none, 1 for sub, 2 for up, 3 for average, 4 for Paeth, 5 for mixed, which affects the achievable compression level. For most images, mixed achieves the best compression rate, hence it's the default setting.
#screenshot-jpeg-quality=100                  # <0-100> Maximum quality for JPEG, default is 90
#screenshot-jpeg-source-chroma=no             # Write JPEG with the same chroma subsampling as the source video, default yes
#screenshot-webp-lossless=yes                 # Lossless WEBP, default no
screenshot-webp-quality=85                    # <0-100> [effective when --screenshot-webp-lossless=no] Quality for lossy WEBP, default 75
screenshot-webp-compression=6                 # <0-6> WEBP compression level, too high levels affect performance, default is 4. Note: This also affects image quality when using lossy WEBP
#screenshot-jxl-distance=0                    # <0-15> JXL's visual model distance, 0 for lossless quality, 0.1 for visually lossless, default 1 equivalent to JPEG 90 quality
#screenshot-jxl-effort=5                      # <1-9> JXL compression level, too high levels affect performance, default 4
screenshot-tag-colorspace=no                  # Tag screenshots with the appropriate color space (not all formats are supported). Default yes
#screenshot-high-bit-depth=no                 # Mainly affects PNG and JPEG XL, use the same bit depth as video output where possible, default yes. Note: Using the same bit depth significantly increases the final size of png/jxl
#screenshot-sw=yes                            # Whether to use software rendering for screenshots, default: no. If set to yes, video is converted to RGB (or whatever is needed for the target screenshot) using software scalers. Software renderers may lack some features, such as HDR rendering
screenshot-template="~~/files/screen/%{media-title}-%P-%n"
                                              # Screenshot naming template: https://mpv.io/manual/master/#options-screenshot-template
#screenshot-dir=~~desktop/                    # Default to save screenshots on the desktop, if not already set in the screenshot naming template

####################
# Scripts Filters Shaders #
####################

gpu-shader-cache-dir="~~/cache/shaders_cache"                                   # Specify the directory to store compiled GPU shaders, speeds up startup. Default enabled
                                                                                # Note! If not placed under APPDATA, ensure the folder has user write permissions.
                                                                                ## Shader cache should speed up operations, but poor disk IO performance could negate this effect. Disable or enable based on actual conditions.
## Script section
## Built-in script switches (don't disable mpv's built-in functionalities without a necessary purpose)
#load-scripts=no                                                                # Automatically loads all external scripts in the scripts subdirectory of the configuration file, default yes. Set to no to disable and manually load specific external scripts, not recommended
#scripts="~~/scripts/autoload.lua;~~/scripts/playlistmanager.lua;~~/scripts/open_dialog.lua"
#load-auto-profiles=no                                                          # <yes|no|default auto> Enable mpv's built-in conditional configuration script [auto_profiles.lua]
#load-osd-console=no                                                            # Enable mpv's built-in console script [console.lua], default yes
#load-stats-overlay=no                                                          # Enable mpv's built-in statistics script [stats.lua], default yes
#ytdl=no                                                                        # Enable mpv's built-in URL parsing enhancement script [ytdl-hook.lua], default yes
#ytdl-format=bestvideo+bestaudio/best                                           # <ytdl|best|worst|mp4|webm|...> Video format/quality directly passed to youtube-dl. Default: bestvideo+bestaudio/best
                                                                                # ytdl does not pass the --format option to youtube-dl, so it won't override its defaults. Note that sometimes youtube-dl returns formats mpv can't use, in those cases mpv defaults may be better
#ytdl-raw-options=sub-langs="zh.*",write-subs=,write-auto-subs=
#ytdl-raw-options-append=write-subs=
#ytdl-raw-options-append=yes-playlist=
#ytdl-raw-options-append=cookies=[D:/cookies.txt]
#ytdl-raw-options-append=proxy=http://127.0.0.1:7890
                                                                                # [Effective when using yt-dlp/youtube-dl to parse URLs] --ytdl-raw-options=<key>=<value>[,<key>=<value>[,...]] Pass custom options to ytdl https://github.com/yt-dlp/yt-dlp#usage-and-options
                                                                                # Best to append multiple parameters independently, i.e., write multiple --ytdl-raw-options-append parameters https://mpv.io/manual/master/#options-ytdl-raw-options
#input-builtin-bindings=no                                                      # Disable the loading of mpv's built-in key bindings during startup. This option does not affect key bindings of external scripts loaded
input-default-bindings=no                                                       # Disable mpv's built-in key bindings and the key binding scheme of --mp.add_key_binding from external scripts
                                                                                # Effectively resolves script shortcut conflicts. Upon enabling, specify needed shortcuts in input.conf

## Filter Section
## The format for setting audio/video filters to launch with MPV (supports multiple items) --af/vf=filter‚ë†=parameter‚ù∂=value:parameter‚ù∑=value,filter‚ë°...
## Only one --af and --vf can exist each. If you don't want to use only this parameter, you can write them separately, for example, use --vf-toggle to add more filters multiple times, which will not override the filters specified by --vf=<value>
## Filters of the same category are mutually exclusive

## Adjusting channels for multi-channel audio tracks to prevent background sound or voices from being too low (for two-channel devices)
#af-toggle=@loudnorm:lavfi=[loudnorm=I=-16:TP=-3:LRA=4]
#af-toggle=@dynaudnorm:lavfi=[dynaudnorm=g=5:f=250:r=0.9:p=0.5]
## Another set of examples
#af-toggle=@loudnorm:!loudnorm=I=-25:TP=-1.5:LRA=1:linear=false
#af-toggle=@dynaudnorm:!dynaudnorm=f=500:g=17:r=0.1
#af-toggle=format:srate=48000

## Choose one of three audio speed filters (the current default is already good)
#af=scaletempo=scale=1.0:stride=60:overlap=.20:search=14:speed=tempo
                                                                                # The audio speed filter used in older versions of mpv. Example values are default parameters
                                                                                # Where scale=<N> controls additional video acceleration; stride=<N> too high may cause skipping at high speed, low speed may produce echo, too low may change pitch, increasing value improves performance
                                                                                # overlap=<N> percentage of overlap, reducing value increases separation and improves performance; search=<N> length to search for the best overlap position (milliseconds), reducing value improves performance
                                                                                # speed=<tempo|pitch|both|none> tempo synchronizes rhythm and speed, pitch causes stuttering not used, both simultaneously consider rhythm and pitch, none ignores speed changes not used
#af=scaletempo2=min-speed=0.25:max-speed=4.0:search-interval=30:window-size=20  
                                                                                # This filter parameter is automatically activated during variable speed playback. Silences beyond the speed range of min/max-speed=<N>. scaletempo2 has higher audio quality
#af=rubberband                                                                  # Audio quality is between scaletempo and scaletempo2. Many adjustable parameters are available, see official documentation for details, here using default parameters 

#vf-toggle=format:gamma=gamma2.2                                                # MPV's target color curve is BT.1886, this video filter is used to revert to the common monitor standard https://github.com/mpv-player/mpv/issues/8009
#vf-toggle=fps=fps=60/1.001                                                     # Force video output at a specified frame rate (this item conflicts with frame interpolation), often used to enhance the smoothness of scrolling comments, not recommended to use --sub-fps=<value>. The numerator (rounded) is your monitor's refresh rate.

## Shader Section
### Shader related settings use configuration groups for settings, the following are only parameter examples, see the [Supplementary Common Parameters] and [Configuration Groups] sections for specific settings
## --glsl-shaders=<value> is used to specify shaders to launch with MPV each time (supports multiple items)
## Example syntax for initially loading multiple shaders
#glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/FSRCNNX_x2_8-0-4-1.glsl;~~/shaders/igv/FSRCNNX_x2_8-0-4-1.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"
#glsl-shaders="~~/shaders/Anime4K/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K/Anime4K_Restore_CNN_Soft_M.glsl;~~/shaders/Anime4K/Anime4K_Upscale_CNN_x2_S.glsl"

## --glsl-shaders-append is equivalent to --glsl-shader=<value> (note the difference from the parameter in the previous explanation), which means appending a shader (only one item can be appended at a time), and will not override the first --glsl-shaders=<value> specified shader, this command can be appended infinitely.
#glsl-shaders-append="~~/shaders/other/PixelClipper.glsl"                       # Anti-ringing shader, mainly used for MPV's internal EWA class scaling algorithms. Compared to the AR algorithm inside --vo=gpu-next, it performs slightly better
#glsl-shaders-append="~~/shaders/other/JointBilateral.glsl"                     # Bilateral chroma upscaling shader - Gaussian version, uses the luminance plane as guidance, achieving clearer edges without introducing any ringing. Only available under --vo=gpu-next
#glsl-shaders-append="~~/shaders/other/nlmeans.glsl"                            # Denoising shader, performs well but is high in performance cost, only available under --vo=gpu-next. Should be placed at the very front of the chain, otherwise, the effect of denoising after upscaling will significantly decrease
#glsl-shaders-append="~~/shaders/other/colorlevels.glsl"                        # Shader for adjusting RGB output range. If needed, adjust the REFBLACK and REFWHITE values in this shader according to actual device conditions, otherwise, the output image may not behave as expected
#glsl-shaders-append="~~/shaders/igv/KrigBilateral.glsl"                        # Advanced chroma upscaling algorithm, effective when activated will override the specified --cscale=xxxxx algorithm. Currently the best chroma upscaling shader
#glsl-shaders-append="~~/shaders/igv/FSRCNNX_x2_8-0-4-1.glsl"                   # Fast Super-Resolution Convolutional Neural Network upscaling algorithm. Minimum scaling trigger ratio is 1.2, when effective will override the specified --scale=xxxxx algorithm
#glsl-shaders-append="~~/shaders/igv/FSRCNNX_x2_8-0-4-1_LineArt.glsl"           # Fast Super-Resolution Convolutional Neural Network upscaling algorithm (anime). Minimum scaling trigger ratio is 1.2, when effective will override the specified --scale=xxxxx algorithm
#glsl-shaders-append="~~/shaders/igv/FSRCNNX_x2_16-0-4-1.glsl"                  # Fast Super-Resolution Convolutional Neural Network upscaling algorithm. 16x has better effect but higher energy consumption. Minimum scaling trigger ratio is 1.2, when effective will override the specified --scale=xxxxx algorithm
#glsl-shaders-append="~~/shaders/igv/FSRCNNX_x2_16-0-4-1_enhance.glsl"          # Fast Super-Resolution Convolutional Neural Network upscaling algorithm. De-aliasing variant, minimum scaling trigger ratio is 1.2, when effective will override the specified --scale=xxxxx algorithm
#glsl-shaders-append="~~/shaders/igv/FSRCNNX_x2_16-0-4-1_anime_enhance.glsl"    # Fast Super-Resolution Convolutional Neural Network upscaling algorithm. Anime de-aliasing variant, minimum scaling trigger ratio is 1.2, when effective will override the specified --scale=xxxxx algorithm
#glsl-shaders-append="~~/shaders/nnedi3/nnedi3-nns16-win8x4.glsl"               # Ultra-high-quality interpolation upscaling algorithm. Minimum scaling trigger ratio is 1.2, extremely high energy consumption, nns16 ‚Üí nns32 ‚Üí nns64 ‚Üí nns128 ‚Üí nns256; win8x4 ‚Üí win8x6 better quality but significantly increases performance demand
#glsl-shaders-append="~~/shaders/ravu/ravu-zoom-ar-r3.glsl"                     # ravu upscaling algorithm zoom variant, universal, trigger ratio >1, upscale to target resolution, when effective will override the specified --scale=xxxxx algorithm
#glsl-shaders-append="~~/shaders/ravu/ravu-lite-ar-r3.glsl"                     # ravu upscaling algorithm lite variant, universal, minimum scaling trigger ratio approximately 1.2, the sharpest variant, when effective will override the specified --scale=xxxxx algorithm
#glsl-shaders-append="~~/shaders/ravu/ravu-r3.glsl"                             # ravu upscaling algorithm r variant, anime type, minimum scaling trigger ratio approximately 1.2, when effective will override the specified --scale=xxxxx algorithm
#glsl-shaders-append="~~/shaders/ravu/ravu-3x-r3.glsl"                          # ravu upscaling algorithm 3x variant, anime type, minimum scaling trigger ratio approximately 2.121, directly upscale threefold, suitable for very low-resolution sources, when effective will override the specified --scale=xxxxx algorithm
#glsl-shaders-append="~~/shaders/ACNet/ACNet.glsl"                              # ACNet upscaling algorithm, visual impression similar to Anime4k, minimum scaling trigger ratio is 1.2, when effective will override the specified --scale=xxxxx algorithm
#glsl-shaders-append="~~/shaders/ACNet/ACNet_HDN_L1.glsl"                       # ACNet upscaling algorithm HDN variant, better at denoising, level 1‚Üí2‚Üí3, the higher the level the better the noise reduction, but may lead to blurriness and lack of detail, when effective will override the specified --scale=xxxxx algorithm
#glsl-shaders-append="~~/shaders/Anime4K/Anime4K_Restore_CNN_M.glsl"            # Anime4k upscaling algorithm module (moderate image repair + weak perceptual enhancement + minimal aliasing introduction), CNN variant minimum scaling trigger ratio is 1.2, recommended Restore_CNN_Soft anti-aliasing softening variant, reducing the occurrence of ringing and other artifacts
                                                                                # Anime4k shader introduction and usage refer to: https://hooke007.github.io/mpv-lazy/[01]_%E7%AC%AC%E4%B8%89%E6%96%B9%E7%9D%80%E8%89%B2%E5%99%A8%E4%BB%8B%E7%BB%8D.html
#glsl-shaders-append="~~/shaders/igv/SSimSuperRes.glsl"                         # Corrects mpv's built-in --scale=xxxxx upscaling algorithms (eliminating ringing artifacts, restoring original clarity, etc.)
#glsl-shaders-append="~~/shaders/igv/SSimDownscaler.glsl"                       # Enhances downscaling algorithms, used together with --linear-downscaling=no
#glsl-shaders-append="~~/shaders/igv/adaptive-sharpen.glsl"                     # Adaptive sharpening algorithm shader

##################
# General Parameters Supplemental Section #
##################

#d3d11-output-csp=pq                          # [Required --gpu-api=d3d11] This parameter is used for direct HDR output and does not support conditional configuration that affects SDR playback.
                                              # The current version needs to manually open the win10 OS HDR first, then open MPV for full-screen playback.
#use-filedir-conf                             # Load the configuration file in the same directory as the playing file
#include="~~/profiles.conf"                   # Append to read the specified configuration file
                                              # All configuration group parameters below can also be individually placed in "~~/profiles.conf", and enabling this parameter will have the same effect.
#input-conf="~~/input.conf"                   # Specify the input configuration file for specifying key bindings
libplacebo-opts=tone_map_metadata=cie_y
                                              # Pass additional raw options to the libplacebo rendering backend (used by --vo=gpu-next) for debugging purposes.
                                              # For detailed parameters, see: http://libplacebo.org/options
                                              # The sample parameter effect is: Force the use of peak detection for HDR tone mapping.

##‚áò‚áò The following are enable parameters for common configuration groups, choose as needed
#profile=ICC                                  # ICC color management configuration group, specified by the operating system's display settings ICC display configuration file
#profile=ICC+                                 # ICC color management configuration group, use color.org provided generic ICC configuration file or professional calibration file, choose the ICC configuration file corresponding to the monitor color gamut by yourself
profile=Target                                # Target color management configuration group, cannot coexist with ICC color management
profile=Dither                                # Dithering algorithm configuration group (fruit), similar to error-diffusion, lower energy consumption
#profile=Dither+                              # Dithering algorithm configuration group (error-diffusion), error-diffusion dithering algorithm, best effect but highest energy consumption
profile=Tscale                                # [Enable before commenting --tscale=<value>] Temporal interpolation algorithm, see specific parameters in the same name configuration in the following configuration area
#profile=Tscale+                              # [Enable before commenting --tscale=<value>] Alternative temporal interpolation algorithm, see specific parameters in the same name configuration in the following configuration area
profile=HQ                                    # Most commonly used built-in algorithm configuration group
profile=DeBand-low                            # [Enable before commenting --deband] Preset banding removal scheme, specific parameters see the same name configuration in the following configuration area, close to madvr deband set to low, good effect already exists when using low
#profile=DeBand-medium                        # [Enable before commenting --deband] Alternative banding removal scheme, specific parameters see the same name configuration in the following configuration area, close to madvr deband set to medium
#profile=DeBand-high                          # [Enable before commenting --deband] Alternative banding removal scheme, specific parameters see the same name configuration in the following configuration area, close to madvr deband set to high
#profile=HDR-PASS                             # HDR pass-through parameter configuration group, currently can only be set during initialization, disable --icc-profile, icc-profile-auto and --target-trc parameters when using HDR pass-through. Available under --vo=gpu-next --gpu-api=vulkan and full-screen (Windows restriction), available under --gpu-api=d3d11, need to manually switch monitor HDR mode (Windows restriction)
#profile=SDR2HDR                              # SDR mapping HDR parameter configuration group, only effective on HDR devices, not recommended to enable. Only available under --vo=gpu-next
profile=HDR2SDR                               # HDR mapping parameter configuration group
#profile=SWscaler                             # Alternative software scaling scheme

## The following are shader configuration groups, enable any one configuration group as needed (this will override the --glsl-shaders-append parameter above)
profile=NNEDI3                                # Suitable for most scenarios (NNEDI3-32)               ## Performs well in most scenarios, adaptability to scenes is better than FSRCNNX configuration (suppressing aliasing and ringing artifacts). Use this configuration group if you prefer versatility.
#profile=NNEDI3+                              # Suitable for low-resolution scenes (NNEDI3-64)               ## In theory, NNEDI3-64 and higher variants have better suppression of ringing artifacts, but energy consumption increases significantly. Choose whether to use based on device performance.
#profile=AMD-FSR_EASU                         # Suitable for most scenarios (AMD-FSR_EASU)            ## EASU variant in AMD's FSR algorithm performs well, produces fewer ringing artifacts compared to FSR and RCAS variants, and has good image quality. Enlarge to target resolution
#profile=Normal                               # Suitable for HD scenes (FSRCNNX)                   ## Similar to madvr's NGU Sharp, but produces more ringing artifacts, performs poorly in low-resolution scenes
#profile=Normal+                              # Suitable for low-resolution scenes (FSRCNNX_enhance)         ## Excellent suppression of ringing artifacts in low-resolution real-life images
#profile=Anime                                # Suitable for HD animation (FSRCNNX_LineArt)           ## Similar to madvr's NGU AA, but produces more ringing artifacts, performs poorly in low-resolution scenes
#profile=Anime+                               # Suitable for low-resolution animation (FSRCNNX_anime_enhance)   ## Excellent suppression of ringing artifacts in low-resolution anime images
#profile=ravu                                 # Suitable for most animations (ravu-r)                  ## Sharpness is good, but produces ringing artifacts
#profile=ravu-zoom                            # Suitable for most scenarios (ravu-zoom)               ## Enlarge to target resolution
#profile=ravu-lite                            # Suitable for most scenarios (ravu-lite)               ## The sharpest and fastest variant, but produces more ringing artifacts
#profile=ravu-3x                              # Suitable for low-resolution animation (ravu-3x)                 ## Similar to madvr's NGU AA, more suitable for anime
#profile=ACNet                                # Suitable for low-resolution animation (ACNet)
#profile=ACNet+                               # Suitable for low-resolution animation (ACNet denoising solution)
#profile=Anime4K                              # Suitable for most animations (Anime4k anti-ringing anti-aliasing)    ## Can effectively suppress defects such as aliasing and ringing, but still has a noticeable perception of smearing degradation
#profile=Anime4K+                             # Suitable for low-resolution animation (Anime4k high-intensity anti-aliasing)    ## Better suppression of aliasing, ringing artifacts, and other defects in anime images, higher intensity. UL variant has the best actual effect, but energy consumption is extremely high, not recommended for use for now
#profile=SSIM                                 # Suitable for low-performance consumption

##############
# General Configuration Group #
##############

##‚áò‚áòGeneral configurations do not have automatic trigger conditions (all built-in configuration groups are also general configurations)
##Multiple configurations need to be activated in the main settings file using --profile=<profile1,profile2,...> or multiple lines of --profile=<xxx> parameters

[ICC]
 icc-profile=""
 icc-profile-auto
 icc-intent=0
 icc-force-contrast=1000
 icc-3dlut-size=auto
 icc-cache-dir="~~/cache/icc_cache"

[ICC+]
 icc-profile="~~/icc/ITU-RBT709ReferenceDisplay.icc"
 icc-intent=0
 icc-force-contrast=no
 icc-3dlut-size=auto
 icc-cache-dir="~~/cache/icc_cache"

[Target]
 icc-profile=""
 icc-profile-auto=no
 target-prim=auto
 target-trc=gamma2.2
 target-contrast=auto
 target-peak=auto

[Dither]
 dither-depth=auto
 dither=fruit
 dither-size-fruit=6

[Dither+]
 dither-depth=auto
 dither=error-diffusion
 error-diffusion=floyd-steinberg

[Tscale]
 video-sync=display-resample
 #video-sync-max-video-change=5
 interpolation
 #interpolation-preserve=no
 tscale=oversample

[Tscale+]
 video-sync=display-resample
 #video-sync-max-video-change=5
 interpolation
 #interpolation-preserve=no
 tscale=sphinx
 tscale-blur=0.65

[HQ]
 scale=ewa_hanning
 cscale=bilinear
 dscale=catmull_rom
 scale-antiring=0.5
 dscale-antiring=0.5
 linear-upscaling=no
 sigmoid-upscaling=yes
 correct-downscaling=yes
 linear-downscaling=no
 #scaler-resizes-only=no
 deband=no

[DeBand-low]
 profile-desc=DeBand low
 deband-iterations=1
 deband-threshold=48
 deband-range=16
 deband-grain=16

[DeBand-medium]
 profile-desc=deband medium
 deband-iterations=2
 deband-threshold=64
 deband-range=16
 deband-grain=24

[DeBand-high]
 profile-desc=deband high
 deband-iterations=3
 deband-threshold=64
 deband-range=16
 deband-grain=24

[HDR-PASS]
 profile-desc=HDR Áõ¥ÈÄöÂèÇÊï∞
 target-colorspace-hint=yes

[SDR2HDR]
 profile-desc=SDR ÂèçÂêëÊò†Â∞Ñ HDR ÂèÇÊï∞
 inverse-tone-mapping=yes

[HDR2SDR]
 profile-desc=HDR-SDR Êò†Â∞ÑÂèÇÊï∞
 tone-mapping=auto
 #tone-mapping-param=1.0
 #tone-mapping-max-boost=1.0
 gamut-mapping-mode=auto
 hdr-contrast-recovery=0.30
 #hdr-contrast-smoothness=3.5
 hdr-compute-peak=auto
 hdr-peak-percentile=99.995
 hdr-peak-decay-rate=20
 hdr-scene-threshold-low=1.0
 hdr-scene-threshold-high=3.0
 allow-delayed-peak-detect=no

##‚áò‚áòAlternative Software Scaling Scheme
##Software scalers are used internally in mpv for format conversion

[SWscaler]
 profile-desc=Software Scaling Configuration
 sws-allow-zimg=no                  # Prioritize using zimg (usually higher quality) over libswscale, default yes. ffmpeg often encounters compatibility issues with zimg, it is recommended to disable
 sws-scaler=bicublin                # [libswscale] <fast-bilinear|bilinear|bicubic default|x|point|area|bicublin|gauss|sinc|lanczos|spline>
                                    # [libswscale] Scaling algorithm (also applied to chroma planes)
 #sws-fast=yes                      # [libswscale] Optimize performance at the expense of quality, default no
 zimg-scaler-chroma=bicubic         # [zimg] <point|bilinear|bicubic|spline16|spline36|lanczos default>
                                    # [zimg] Chroma upscaling algorithm
 #zimg-scaler-chroma-param-a=1/3    # [zimg] Subparameter of the chroma upscaling algorithm, algorithms that do not support adjustment are not affected, default default
 #zimg-scaler-chroma-param-b=1/3
 zimg-scaler=bicubic                # [zimg] Scaling algorithm, available values refer to --zimg-scaler-chroma
 zimg-scaler-param-a=1/3            # [zimg] Subparameters of the scaling algorithm
 zimg-scaler-param-b=1/3
 #zimg-dither=error-diffusion       # [zimg] <no|ordered|random default|error-diffusion> Dithering algorithm for color depth
 zimg-fast=no                       # [zimg] Optimize performance at the expense of quality, default yes

[NNEDI3]
 profile-desc=Suitable for most scenarios
 glsl-shaders="~~/shaders/nnedi3/nnedi3-nns32-win8x4.glsl;~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[NNEDI3+]
 profile-desc=Suitable for low-resolution scenes
 glsl-shaders="~~/shaders/nnedi3/nnedi3-nns64-win8x4.glsl;~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[AMD-FSR_EASU]
 profile-desc=Suitable for most scenarios
 glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/AMD-FSR/AMD-FSR-EASU_rgb.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[Normal]
 profile-desc=Suitable for HD scenes
 glsl-shaders="~~/shaders/igv/FSRCNNX_x2_8-0-4-1.glsl;~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[Normal+]
 profile-desc=Suitable for low-resolution scenes
 glsl-shaders="~~/shaders/igv/FSRCNNX_x2_16-0-4-1_enhance.glsl;~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[Anime]
 profile-desc=Suitable for HD animation
 glsl-shaders="~~/shaders/igv/FSRCNNX_x2_8-0-4-1_LineArt.glsl;~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[Anime+]
 profile-desc=Suitable for low-resolution animation
 glsl-shaders="~~/shaders/igv/FSRCNNX_x2_16-0-4-1_anime_enhance.glsl;~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[ravu]
 profile-desc=Suitable for most animations
 glsl-shaders="~~/shaders/ravu/ravu-r3.glsl;~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[ravu-3x]
 profile-desc=Suitable for low-resolution animation
 glsl-shaders="~~/shaders/ravu/ravu-3x-r3.glsl;~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[ravu-zoom]
 profile-desc=Suitable for most scenarios
 glsl-shaders="~~/shaders/ravu/ravu-zoom-ar-r3.glsl;~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[ravu-lite]
 profile-desc=Suitable for most scenarios
 glsl-shaders="~~/shaders/ravu/ravu-lite-ar-r3.glsl;~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[ACNet]
 profile-desc=Suitable for low-resolution animation
 glsl-shaders="~~/shaders/ACNet/ACNet.glsl;~~/shaders/ACNet/ACNet.glsl;~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[ACNet+]
 profile-desc=Suitable for low-resolution animation-Enhanced denoising
 glsl-shaders="~~/shaders/ACNet/ACNet_HDN_L1.glsl;~~/shaders/ACNet/ACNet.glsl;~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[Anime4K]
 profile-desc=Anime4K
 glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/Anime4K/Anime4K_Restore_CNN_Soft_M.glsl;~~/shaders/Anime4K/Anime4K_Clamp_Highlights.glsl"

[Anime4K+]
 profile-desc=Anime4K+
 glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/Anime4K/Anime4K_Restore_CNN_Soft_VL.glsl;~~/shaders/Anime4K/Anime4K_Clamp_Highlights.glsl"

[SSIM]
 profile-desc=Suitable for 4k low-performance
 glsl-shaders="~~/shaders/other/FastBilateral.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

##############
# Conditional Configuration Group #
##############

##‚áò‚áòConditional trigger configurations, triggering specific parameters based on given conditions. Simple format examples are provided.
##Simply comment out --profile-cond and --profile-restore to convert conditional configurations into general configurations. The usage of general configurations is specified in the general area --profile=<value>

##‚áò‚áòExample format of conditional configurations
##[FS-loop]                                                  # Configuration name, customizable
##profile-desc    = Loop playback of current file in fullscreen # Description of the configuration, not a parameter, write as desired
##profile-cond    = fullscreen                               # Condition triggering this configuration. Available property list https://mpv.io/manual/master/#property-list
##profile-restore = copy                                     # This parameter is generally used to revert to common parameters before triggering (closing this will retain)
##...                                                        # Then write the parameters triggered under this condition
##...

##‚áò‚áòExamples of filename matching: Trigger configurations based on specific characters in the filename
##The character "-" needs to be escaped using LUA's escape character "%"
#[VCB-Studio]
#profile-desc=Vacuum Circuit Breaker
#profile-cond=filename:find("VCB%-Studio")~=nil
#profile-restore=copy
#deband=no

#[DVD-Anime]
#profile-desc=Enhancement for 2D Low-Resolution Sources
#profile-cond=height<=576
#profile-restore=copy
#glsl-shaders="~~/shaders/other/FastBilateral.glsl;~~/shaders/igv/FSRCNNX_x2_8-0-4-1_LineArt.glsl;~~/shaders/igv/FSRCNNX_x2_8-0-4-1_LineArt.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[Deband]
 profile-desc=Debanding enabled for sources below YUV420P10
 profile-cond=p["video-params/average-bpp"] < 24
 profile-restore=copy
 deband=yes

[hdr-2390]
 profile-cond=p.tone_mapping == "bt.2390" and p.current_vo == "gpu-next"
 profile-restore=copy
 tone-mapping-param=2.0

#[hdr-spline]
#profile-cond=p.tone_mapping == "spline"
#profile-restore=copy
#tone-mapping-param=1.0

#[DoVi-P5]
#profile-desc=DoVi-P5 HDR passthrough conversion
#profile-cond=p["video-out-params/max-luma"] > 203 and p["video-params/gamma"] == "bt.1886"
#profile-restore=copy
#target-trc=bt.2020
#target-gamut=dci-p3
#target-trc=pq

[HDR]
 profile-desc=HDR Configuration
 profile-cond=p["video-out-params/max-luma"] > 203
 profile-restore=copy
 #icc-profile=""
 #icc-profile-auto=no
 #target-trc=auto
 #target-peak=100
 blend-subtitles=no
 deband=no
 vf=""

[SDR-Gamut]
 profile-desc=Color space mapping for SDR content
 profile-cond=p["video-params/primaries"] ~= "bt.709" and p["video-params/gamma"] == "bt.1886"
 profile-restore=copy
 gamut-mapping-mode=clip

[rot-fix]
 #Issue status https://github.com/mpv-player/mpv/issues/8223
 profile-desc=Fix chroma corruption in rotated output
 profile-cond=(p["video-params/rotate"] == 90 or p["video-params/rotate"]==270) and p.current_vo ~= "gpu-next"
 profile-restore=copy
 hwdec=no
 glsl-shaders=""

[video-sync]
 profile-desc=Change audio/video synchronization mode when audio speed adjustment exceeds threshold to avoid noticeable pitch changes
 profile-cond=(speed * audio_speed_correction) > 0 and ((speed * audio_speed_correction) < 0.96 or (speed * audio_speed_correction) > 1.04) and not (p["estimated-vf-fps"] > 47 or p["display-fps"] > 120)
 profile-restore=copy-equal
 video-sync=display-tempo

[fps-fix]
 profile-desc=Fix abnormal power consumption or frame drops caused by excessively high video frame rate and display refresh rate
 profile-cond=p["estimated-vf-fps"] > 47 or p["display-fps"] > 120
 profile-restore=copy
 video-sync=audio

[8k-fix]
 profile-desc=Use d3d11va hardware decoding for 8K AV1 to address frame dropping issues, this solution is only available with --gpu-api=d3d11
 profile-cond=p["video-params/w"] > 7000 or p["video-params/h"] > 3000
 profile-restore=copy
 hwdec=auto-safe
 video-sync=audio

[pgs-fix]
 profile-desc=Fix subtitle misalignment caused by inconsistent script ratio between embedded PGS subtitles and video in domestically produced movies
 profile-cond=p["video-params/aspect"] > 16 / 9
 profile-restore=copy
 stretch-image-subs-to-screen=yes

#[deinterlace]
# profile-desc=Automatically deinterlace content
# profile-cond=p["video-frame-info/interlaced"]
# profile-restore=copy
# deinterlace

[audio-filter]
 profile-desc=Enable dynamic range adjustment filter when audio channels are greater than 2, suitable for dual-channel devices
 profile-cond=p["audio-params/channel-count"] > 2
 profile-restore=copy-equal
 af-pre=@dynaudnorm:lavfi=[dynaudnorm=g=5:f=250:r=0.9:p=0.5]

[pause]
 profile-desc=Disable window always on top when paused
 profile-cond=pause
 profile-restore=copy
 ontop=no

#[fullscreen]
# profile-desc=Automatically set window always on top when in fullscreen mode
# profile-cond=fullscreen or window_maximized
# profile-restore=copy
# ontop

[minimized]
 profile-desc=Pause when minimized
 profile-cond=window_minimized and vid and not p["current-tracks/video/albumart"]
 profile-restore=copy-equal
 pause

[end]
 profile-desc=Exit fullscreen after playlist ends
 profile-cond=idle_active
 no-fullscreen
 no-window-maximized

[media-title]
 profile-desc=Switch window title display content under special protocols
 profile-cond=path:find('://') ~= nil or path:find('^magnet:') ~= nil
 #profile-cond=demuxer_via_network == true
 profile-restore=copy
 title=${?pause==yes:‚è∏}${?mute==yes:üîá}${?ontop==yes:üìå}${media-title}

#[image]
# profile-desc=Image
# profile-cond=vid and not p["current-tracks/video/albumart"] and estimated_frame_count <= 1
# profile-restore=copy
# prefetch-playlist
# image-display-duration=inf
# scale=ewa_hanning
# cscale=ewa_hanning
# dscale=mitchell

#[audio]
# profile-desc=Music
# profile-cond=aid and (not vid or p["current-tracks/video/albumart"])
# profile-restore=copy
# prefetch-playlist
# loop-playlist=inf

##############
# Traditional Configuration Group #
##############

##‚áò‚áòAutomatic configuration for older versions, limited functionality, generally not used. Syntax as shown in the example (can be converted to conditional configuration group format)

##‚áò‚áòActivate corresponding parameters when files with matching extensions are detected during playback, automatically revoke if not matched
##[extension.extension_name]
##Do not write --profile-cond and --profile-restore
##... # Simply write parameters

#[extension.vpy]
#profile-desc=Preview support for "xxxx.vpy" files
#demuxer-lavf-format=vapoursynth

##‚áò‚áòActivate corresponding parameters when protocols with matching names are detected during playback, automatically revoke if not matched
##[protocol.protocol_name]	
##Do not write --profile-cond and --profile-restore
##... # Simply write parameters

#[protocol.https]
#profile-desc=Switch display content under https protocol
#osd-playing-msg='${media-title} ${!chapters==0:Á´†ËäÇ:${chapter}/${chapters}} ${!playlist-count==1:ÂàóË°®:${playlist-pos-1}/${playlist-count}}'
#script-opts-append=osc_lazy-title=${media-title} ${!chapters==0:Á´†ËäÇ:${chapter}/${chapters}} ${!playlist-count==1:ÂàóË°®:${playlist-pos-1}/${playlist-count}}

##‚áò‚áòAutomatically switch parameters and configuration files for mpv windows based on display names using the display-name.lua script (Windows only), requires MultiMonitorTool.exe
#[TV]
#profile-cond=p["user-data/display_name"] == 'VX2771-4K-HD'
#profile-restore=copy-equal
#dither-depth=10
#inverse-tone-mapping=yes
#target-colorspace-hint=yes
#script-opts-append=changerefresh-auto=yes
#script-opts-append=changerefresh-rates=23;24;25-50;29-59;30-60;50;59;60